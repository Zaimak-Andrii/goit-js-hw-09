{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,qBAC9BE,KAAMH,SAASC,cAAc,oBAC7BG,OAAQJ,SAASC,cAAc,uBAyBjC,SAASI,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUJ,UAEpBO,EAAO,CAAEH,WAAUJ,S,GAEpBA,E,IAhCPY,QAAQC,IAAIjB,GAEZA,EAAKC,KAAKiB,iBAAiB,UAE3B,SAA2BC,GACzBA,EAAIC,iBAMJ,IAJA,IAAMC,EAAQC,OAAOtB,EAAKI,MAAMmB,OAC1BlB,EAAOiB,OAAOtB,EAAKK,KAAKkB,OACxBjB,EAASgB,OAAOtB,EAAKM,OAAOiB,OAEzBC,EAAI,EAAGA,EAAIlB,EAAQkB,GAAK,EAC/BjB,EAAciB,EAAI,EAAGH,EAAQhB,EAAOmB,GACjCC,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUJ,EAAKsB,EAALtB,MACjBN,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANzB,EAAM,M,IAE9D0B,OAAM,SAAAJ,G,IAAGlB,EAAQkB,EAARlB,SAAUJ,EAAKsB,EAALtB,MAClBN,EAAA6B,OAAOI,QAAQ,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAANzB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=delay]'),\n  step: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n};\n\nconsole.log(refs);\n\nrefs.form.addEventListener('submit', submitFormHandler);\n\nfunction submitFormHandler(evt) {\n  evt.preventDefault();\n\n  const delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, delay + step * i)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","console","log","addEventListener","evt","preventDefault","delay1","Number","value","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.423b2ece.js.map"}